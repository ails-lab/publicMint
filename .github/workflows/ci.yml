name: Mint CI

on: 
  push:
    branches:
      - deploy/base
      - deploy/mint4all
    tags:
      - r-.*

jobs:
  build:
    runs-on: [self-hosted]
    env:
      MINT_APP: "mint4all"
      REGISTRY: mint.docker.ails.ece.ntua.gr
      DEPLOY_USER: deploy
      CONTAINER_NAME: mint4all
      DEPLOY_SERVER: lego.ails.ece.ntua.gr


    steps:
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF##*/})"
      id: extract_branch

    - name: Set tag ref
      run: |
        echo TAG_REF=${GITHUB_SHA::8} >> $GITHUB_ENV              

    # - name: Set env for development
    #   #if: endsWith(github.ref, '/development')
    #   run: |
    #     echo DEPLOY_SERVER=lego.ails.ece.ntua.gr >> $GITHUB_ENV              

    - uses: actions/checkout@v2

    - name: Cache ivy packages
      uses: actions/cache@v2
      with:
        path: .ivy2
        key: ${{ runner.OS }}-ivy-${{ hashFiles('ivy.xml') }}
        restore-keys: |
          ${{ runner.OS }}-ivy-
          ${{ runner.OS }}-

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ${{ env.REGISTRY }}
        username: builder
        password: ${{ secrets.MINT_DOCKER_KEY }}
    
    - name: build
      run: >-
         mkdir build; 
         docker run --rm -w /app -v $PWD:/app --user $(id -u):$(id -g) -e MINT_APP=${MINT_APP} -e TOMCAT_HOME=/usr/local/tomcat mint.docker.ails.ece.ntua.gr/mint-build-base 
         ant -Divy.default.ivy.user.dir=/app/.ivy2 -Dappname=${MINT_APP} -Dcustom=default -Ddeploy_target=generic@docker modify

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        build-args: |
          MINT_APP=${{ env.MINT_APP }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.MINT_APP }}:latest
          ${{ env.REGISTRY }}/${{ env.MINT_APP }}:${{ env.TAG_REF }}
          
        # ${{ env.REGISTRY }}/${{ env.MINT_APP }}:${{ steps.extract_branch.outputs.branch }}
     

    - name: Deploy to Server
      run: |
        echo "${{ secrets.MINT_CI_SSH_KEY }}" > /tmp/sshkey
        chmod 600 /tmp/sshkey 
        ssh -i /tmp/sshkey -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} "cd /data/mint/services && docker compose pull ${CONTAINER_NAME} && docker compose up -d ${CONTAINER_NAME}"

